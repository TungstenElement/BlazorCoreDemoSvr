@inject NavigationManager NavigationManager

<header class="navbar navbar-expand-sm align-items-sm-stretch" >
    <nav class="container-xxl bd-gutter flex-xxl-nowrap flex-xxl-nowrap" aria-label="Main Navigation">
        <a class="navbar-brand text-danger" href="">Blazor & .NET Core Demo</a>
        <button class="navbar-toggler m-lg-auto bg-secondary" type="button" data-toggle="collapse" data-target="#navbarText" aria-controls="navbarText" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarText" onclick="document.querySelector('.navbar-toggler').click()">
            <ul class="navbar-nav m-lg-auto mt-1 mt-md-auto" >
                <li class="dropdown-header px-1">
                    <a class="nav-link" href="#" >Home</a>   
                    <ul class="dropdown-menu" >
                        <li class="dropdown-item">Inner Home</li>
                        <li class="dropdown-item">Outer Home</li>
                        <li class="dropdown-divider"></li>
                        <li class="dropdown-item">Final Home</li>
                    </ul>
                </li>

                <li class="dropdown-header px-1">
                    <a class="nav-link" href="counter">Counter</a>
                </li>

                <li class="dropdown-header px-1">
                    <a class="nav-link" href="weather">Weather</a>
                </li>
 
            </ul>
        </div>
    </nav>
</header>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
